import threading


threading.current_thread()				获取当前线程信息
threading.active_count()				获取当前线程数量

================================================================================

创建一个线程对象

t1 = threading.Thread(target=func,args=(1,))

target 线程需要执行的方法
args   方法内需要传入的参数_元祖类型

================================================================================

开始运行线程

t1.start()

================================================================================

谁调用该方法就阻塞谁的线程,直到 t1 执行完

t1.join()

================================================================================

守护线程,设置为 True 后,主线程结束, t1 就不继续执行线程代码了

t1.setDaemon(True)	必须在 start 方法前面

================================================================================
================================================================================

创建自定义类

class myThread(threading.Thread):		继承父类

    def __init__(self,num):			构造函数
        threading.Thread.__init__(self)
        self.num = num

    def run(self):				线程函数
        print('running on number: %s' % self.num)
        time.sleep(3)

================================================================================