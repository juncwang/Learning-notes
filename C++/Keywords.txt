<<<<<<< HEAD
头文件
include 		导入头文件 #

变量
signed			有符号标识
unsigned		无符号标识
void			无类型
bool			布尔型			-
char			字符型			8位
wchar_t			宽字符型		16位
short			短整型			16位
int 			整型变量		16位
long			长整形			32位
float 			单精度浮点型变量	6位有效数字
double 			双进度浮点型变量	10位有效数字
long double		扩展双精度浮点型	10位有效数字

逻辑
if else			选择
while			循环
for			循环

类
class			类

public			公有成员
private			私有成员

方法
return 			返回

变量
true			真
false			假

转移字符
\n			换行
\t			缩进
%d			十进制
%f			浮点显示
=======
头文件
include 		导入头文件 #

namespace		命名空间
using			使用命名空间

变量
signed			有符号标识
unsigned		无符号标识
void			无类型
bool			布尔型			-
char			字符型			8位
wchar_t			宽字符型		16位
short			短整型			16位
int 			整型变量		32位
long			长整形			32位
float 			单精度浮点型变量	6位有效数字
double 			双进度浮点型变量	10位有效数字
long double		扩展双精度浮点型	10位有效数字

enum			枚举类型
struct			结构体
class			类

extern			声明变量 该变量在其他类里进行定义
const			定义常量,必须初始化
typedef			定义变量名，定义后可以使用变量名定义变量

逻辑
if else			选择
while			循环
for			循环


public			公有成员
private			私有成员

方法
return 			返回

变量
true			真
false			假

迭代器
iterator		一般迭代器，可以修改数据
const_iterator		常迭代器，不能修改数据
例: vector<int>::iterator it = v.begin();
>>>>>>> aab7991b8c0eae288612b4ed84dc76a9debbc63c
