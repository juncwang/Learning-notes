sed [-nefr] [动作] [文件]
选项与参数：
-n ：使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来
-e ：直接在命令列模式上进行 sed 的动作编辑
-f ：直接将 sed 的动作写在一个文件内， -f filename 则可以运行 filename 内的 sed 动作
-r ：sed 的动作支持的是延伸型正规表示法的语法。(默认是基础正规表示法语法)
-i ：直接修改读取的文件内容，而不是输出到终端。

动作说明： [n1[,n2]] 动作：
n1, n2 ：不一定存在，一般代表选择进行动作的行数，比如，如果我的动作是需要在 10 到 20 行之间进行的，则10,20[动作行为]

动作：
#a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)
#c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！
#d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；
    sed  "3d"  file  #  删除第三行
    sed  "1,3d"  # 删除前三行
    sed  "1d;3d;5d"  # 删除1、3、5行
    sed  "/^$/d" #删除空行   
    sed  "/abc/d" #删除所有含有abc的行
    sed  "/abc/，/def/d" #删除abc 和 def 之间的行，包括其自身
    sed  "1，/def/d" #删除第一行到 def 之间的行，包括其自身
    sed  "/abc/，+3d " # 删除含有abc的行之后，在删除3行
    sed  "/abc/，～3d" #从含有abc的行开始，共删除3行
    sed  "1~2d"  # 从第1行开始，每2行删除一行， 删除奇数行
    sed  "2~2d"  # 从第2行开始，每2行删除一行， 删除奇数行
    sed  "$d"  # 删除最后一行
    sed  "/dd\|cc/d"  删除有dd或者cc的行
    
#i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；
#p ：列印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行
    sed -n  "3p"  file  #  显示第三行
    sed -n  "1,3p"  # 显示前三行
    sed -n  "2,+3p"  # 显示第二行，及后面的三行
    sed -n  "$p"  # 显示最后一行
    sed -n "1p;3p;5p"  # 只显示文件1、3、5行
    sed -n  "$="  # 显示文件行数
#s ：替换，可以直接进行取代的工作。通常这个 s 的动作可以搭配正规表示法，例如 1,20s/old/new/g
    's/old/new/g'  
    
    sed  "s/\(all\)/bb/"
    sed -r "s/(all)/bb/"